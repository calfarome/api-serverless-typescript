service: api-serverless-typescript

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  lambdaHashingVersion: 20201221
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  # you can add statements to the Lambda function's IAM Role here
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:Scan"
          Resource:
            - { "Fn::GetAtt": ["StarshipsTable", "Arn"] }
  # you can define service wide environment variables here
  environment:
    STARSHIPS_TABLE_NAME: ${self:provider.stage}Starships
    NODE_ENV: development

# you can add packaging information here
package:
  patterns:
    - config/**    

# functions
functions:
  openapi:
    handler: src/index.handler
    events:
      - httpApi:
          path: /{proxy+}
          method: any

# Serverless plugins
plugins:
  - serverless-plugin-typescript

# Resources your functions use
resources:
  Resources:
    StarshipsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.STARSHIPS_TABLE_NAME}
        # cheapest for the beginning
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: StarshipID
            AttributeType: S
        KeySchema:
          - AttributeName: StarshipID
            KeyType: HASH
